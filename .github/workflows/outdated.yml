name: Outdated CI


on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/outdated.yml'
      - 'deps.edn'
      - 'shadow-cljs.edn'
      - 'package.json'
    branches:
      - master
  pull_request:
    branches:
      - master


env:
  clojure-cli: latest
  java-version: "17"


jobs:
  outdated:
    if: "!(contains(github.event.head_commit.message, 'ci skip') || contains(github.event.head_commit.message, 'skip ci'))"
    runs-on: ubuntu-latest
    name: Check outdated deps
    steps:
      - uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ env.java-version }}
      - name: Set up clojure-cli
        uses: DeLaGuardo/setup-clojure@9.4
        with:
          cli: ${{ env.clojure-cli }}
      - name: Cache clojure dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
          key: cljdeps-${{ runner.os }}-${{ hashFiles('**/deps.edn') }}
          restore-keys: |
            cljdeps-${{ runner.os }}-


      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install node modules
        run: npm install


      - name: Outdated (Clojure)
        run: |
          clojure -M:slf4j-nop:outdated --skip=github-action --skip=pom
      - name: Outdated (NPM)
        run: |
          npx -y check-outdated --ignore-packages react,react-dom
          # npm outdated --dev


      - name: Discord action job digest notification
        uses: sarisia/actions-status-discord@v1
        if: always() # Pick up events even if the job fails or is canceled.
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
